#%RAML 1.0
title: Mod-Users BL
version: v6.1
baseUri: http://github.com/org/folio/mod-users-bl

documentation:
  - title: Business Logic Users API
    content: A front end for mod-users and mod-permissions

types:
  compositeUser: !include compositeUser.json
  compositeUserListObject: !include compositeUserListObject.json
  loginCredentials: !include loginCredentials.json
  userdata.json: !include userdata.json
  usergroup.json: !include usergroup.json
  permissionUser.json: !include permissionUser.json
  proxyfor.json: !include proxyfor.json
  tokenExpiration: !include tokenExpiration.json
  identifier: !include identifier.json
  errors: !include raml-util/schemas/errors.schema
  updateCredentials: !include updateCredentials.json
  generateLinkRequest: !include generateLinkRequest.json
  generateLinkResponse: !include generateLinkResponse.json
  configurations: !include configurations.json
  passwordResetAction: !include passwordResetAction.json
  passwordReset: !include passwordReset.json
  notification : !include notification.json
  openTransactions: !include openTransactions.json

traits:
  orderable: !include raml-util/traits/orderable.raml
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  language: !include raml-util/traits/language.raml
  validate: !include raml-util/traits/validation.raml
  includeable: !include raml-util/traits/includes.raml
  permissionsExpandable:
    queryParameters:
      expandPermissions:
        description:
          Whether or not to expand permissions listings
        type: boolean
        required: false
        default: false
resourceTypes:
  compositeUserResource:
   get:
    description: "Get a user by <<typeName>>"
    is: [
      includeable,
      permissionsExpandable
    ]
    responses:
      200:
        body:
          application/json:
            type: compositeUser
      400:
        description: "Bad request"
        body:
          text/plain:
            example: "Bad request"
      403:
        description: "Access denied"
        body:
          text/plain:
            example: "Access denied"
      404:
        description: "User not found"
        body:
          text/plain:
            example: "User not found"
      422:
        description: "Unprocessable Entity"
        body:
          application/json:
            type: errors
      500:
        description: "Internal server error"
        body:
          text/plain:
            example: "Internal server error"
  compositeForgottenResource:
    post:
      description: called when a user has forgotten <<resourceTypeName>>
      body:
        application/json:
          type: identifier
      responses:
        204:
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        422:
          description: "Unprocessable Entity"
          body:
            application/json:
              type: errors
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  compositeOpenTransactionsResource:
    get:
      description: "Check if user has any open transactions, and if so, how many. Identify user by <<typeName>>"
      responses:
        200:
          body:
            application/json:
              type: openTransactions
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        404:
          description: "User not found"
          body:
            text/plain:
              example: "User not found"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
/bl-users:
  get:
    description: Get a number of user (and possibly related) records based on criteria in the user and related modules
    is: [
      searchable: {description: "", example: "active=true"},
      pageable,
      includeable
    ]
    responses:
      200:
        body:
          application/json:
            type: compositeUserListObject
      400:
        description: "Bad request"
        body:
          text/plain:
            example: "Bad request"
      403:
        description: "Access denied"
        body:
          text/plain:
            example: "Access denied"
      500:
        description: "Internal server error"
        body:
          text/plain:
            example: "Internal server error"
  /by-id:
    /{id}:
      type: { compositeUserResource: { "typeName" : "id" } }
      delete:
        description: "Delete a user by id"
        responses:
          204:
           description: "User deleted successfully"
          404:
            description: "User with a given ID not found"
            body:
              text/plain:
          409:
            description: "Conflict, e.g. user cannot be deleted as there are open transactions"
            body:
              application/json:
                type: openTransactions
          500:
            description: "Internal server error, e.g. due to misconfiguration"
            body:
              text/plain:
                example: "Internal server error, contact administrator"
      /open-transactions:
        type: { compositeOpenTransactionsResource: { "typeName" : "id" } }
  /by-username:
    /{username}:
      type: { compositeUserResource: { "typeName" : "username"} }
      is: [includeable]
      /open-transactions:
        type: { compositeOpenTransactionsResource: { "typeName" : "username" } }
  /_self:
    type: { compositeUserResource: { "typeName" : "self reference" } }
  /login-with-expiry:
    post:
      description: |
        Allow a new user to login and return two cookies, one containing the user's refresh token
        and one containing an access token. Both tokens have an expiration. The expiration time
        for each is contained in the composite user token expiration property.
      is: [permissionsExpandable, includeable]
      headers:
        User-Agent:
        X-Forwarded-For:
      body:
        application/json:
          schema: loginCredentials
      responses:
        201:
          description: |
            Returns a CompositeUser object in addition to two Set-Cookie headers, one containing
            the refresh token and one containing the access token. Note that the Set-Cookie headers are
            set in BLUsersAPI.java using the raw response object rather than through RMB code-generation.
            This is because RMB code generation doesn't let us do multiple headers with the same name,
            which we need to do here.
          body:
            application/json:
              schema: compositeUser
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        422:
          description: "Unprocessable Entity"
          body:
            application/json:
              type: errors
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /forgotten:
    /password:
      type: {compositeForgottenResource: {"resourceTypeName" : "a password"}}
    /username:
      type: {compositeForgottenResource: {"resourceTypeName" : "a username"}}
  /settings:
    /myprofile:
      /password:
        post:
          description: Allow change password for user
          headers:
            User-Agent:
            X-Forwarded-For:
          body:
            application/json:
              type: updateCredentials
          responses:
            204:
              description: "Successful update"
              body:
                text/plain: !!null
            400:
              description: "Bad request"
              body:
                application/json:
                  type: errors
            401:
              description: "Unauthorized"
              body:
                text/plain:
                  example: "Unauthorized"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
  /password-reset:
    /link:
      post:
        description: Generate and send password reset link
        body:
          application/json:
            type: generateLinkRequest
        responses:
          200:
            body:
              application/json:
                type: generateLinkResponse
    /reset:
      post:
        description: "Reset password"
        headers:
          User-Agent:
          X-Forwarded-For:
        body:
          application/json:
            type: passwordReset
        responses:
          204:
            description: "Successful password reset"
          422:
            description: "Unprocessable Entity"
            body:
              text/plain:
                example: "Bad request"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
    /validate:
      post:
        responses:
          204:
            description: "Successful link validation"
          422:
            description: "Unprocessable Entity"
            body:
              text/plain:
                example: "Bad request"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"

